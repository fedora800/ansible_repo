
[defaults]
inventory        = ~/git-projects/ansible_repo/inventories
roles_path       = ~/git-projects/ansible_repo/roles
log_path         = ~/ansible.log

log_level        = debug

# ANSIBLE_LOG_PATH=/tmp/ansible_dynamic_$(date +"%d%m%Y_%H%M%S").log ansible-playbook my-playbook.yaml
#display_args_to_stdout = true
#ask_sudo_pass = True
# skipped tasks wonâ€™t be shown in the output when running playbooks
display_skipped_hosts = false

#stdout_callback=default
#stdout_callback=json
#stdout_callback = yaml
#stdout_callback = minimal
#stdout_callback = skippy
#only displays for tasks that change state (changed/failed tasks), not print skipped tasks. but needs each task to have a tag of print_action.  but with profiling enabled, it may still display timestamps for each task execution.
# *but* it caused me hours of wasted time when using include_tasks, not showing properly etc
# stdout_callback = community.general.selective


show_task_path_on_failure = true


#callbacks_enabled=ansible.posix.timer                                 # adds timer to the playbook
#callbacks_enabled=ansible.posix.profile_tasks                         # adds timestamps for each task along with the stats of time taken for each task

# above 2 clubbed together in 1 setting
#ansible.posix.profile_tasks - profiles the execution of tasks, which includes printing the start and end times for each task, thus providing detailed timing information about how long each task takes to run.

#This timer plugin adds timestamps to the output, showing when each task starts and finishes.
#ansible.posix.timer

#callbacks_enabled=ansible.posix.profile_tasks,ansible.posix.timer
#ansible.posix.profile_roles    # profiling at role level

# Enable the profile_tasks plugin, which is part of the ansible.posix collection
# It needs to be installed using -  $ ansible-galaxy collection install ansible.posix
callback_whitelist = ansible.posix.profile_tasks



[callback_profile_tasks]
# Set the threshold to report only tasks that take longer than 2 seconds
task_duration_threshold = 2.0




[colors]
debug = purple
error = bright red
#skip = bright yellow

