---
<<<<<<< HEAD
# resources.yml
# -----------------------------------------------------------------------------------------------------
# Section 01 - Operating System related
# Section 02 - CPU related
# Section 03 - Memory related
# Section 04 - Network related
# Section 05 - Swap space related

# -----------------------------------------------------------------------------------------------------

- name: Setting fact for resources.yml
  ansible.builtin.set_fact:
    f_this_file_name: "resources.yml"
#  no_log: true

- name: "{{ f_this_file_name }} | Debug - Enter resources.yml"
  debug:
    msg: "Entered resources.yml"
  when: v_debug is true

- name: "{{ f_this_file_name }} | Debug v_run_task variable"
  debug:
    msg: "v_run_task is set to: {{ v_run_task | default('NOT SET') }}"
  when: v_debug is true


# -----------------------------------------------------------------------------------------------------
# Section 01 - Operating System related

- name: "{{ f_this_file_name }} | RSC-1-01 - Get Operating System Info"
  ansible.builtin.debug:
    msg: "The operating system is: {{ ansible_distribution }} {{ ansible_distribution_version }}"
  when: v_run_task == "v_rsc_get_os_info"

# -----------------------------------------------------------------------------------------------------
# Section 02 - CPU related

- name: "{{ f_this_file_name }} | RSC-2-01 - Display CPU information"
  debug:
    msg: "Architecture: {{ ansible_architecture }} | CPU core(s): {{ ansible_processor_cores }} | VCPUs: {{ ansible_processor_vcpus }}"
  #when: v_is2_show_cpuinfo is defined and v_is2_show_cpuinfo
  when: v_run_task == "v_rsc_show_cpu_info"


# -----------------------------------------------------------------------------------------------------
# Section 03 - Memory related

- name: "{{ f_this_file_name }} | RSC-3-01 - Gather memory information"
  debug:
    var: ansible_memory_mb
  when: v_run_task == "v_rsc_get_memory_info"

- name: "{{ f_this_file_name }} | RSC-3-02 - Display total RAM"
  debug:
    msg: "Total RAM is {{ ansible_memory_mb.real.total }} MB"
  when: v_run_task == "v_rsc_show_memory_info"

- name: "{{ f_this_file_name }} | RSC-3-03 - Check if RAM is less than 2 GB and fail"
  fail:
    msg: "Error: Not enough RAM. Minimum required is 2 GB, but only {{ (ansible_memory_mb.real.total / 1024) | round(2) }} GB is available."
  when: ansible_memory_mb.real.total < 2048

- name: "{{ f_this_file_name }} | RSC-3-04 - Warning about low RAM if between 2GB and 4GB"
  debug:
    msg: "Warning: The system has less than 2 GB of RAM ({{ (ansible_memory_mb.real.total / 1024) | round(2) }} GB). This may affect performance."
  when: ansible_memory_mb.real.total >= 2048 and ansible_memory_mb.real.total <= 4096



# -----------------------------------------------------------------------------------------------------
# Section 04 - Network related

# -----------------------------------------------------------------------------------------------------
# Section 05 - Swap space related

- name: "{{ f_this_file_name }} | RSC-4-01 - Check if swap is enabled"
  # grep -w because I don't want /swap matching /swapfile, for example
  ansible.builtin.shell: "/sbin/swapon --show"                            # should show no rows and return code of 0 if no swap
  register: reg_fstab_swap_count
  changed_when: false           # Ensure it doesnâ€™t report as changed unless swap was actually enabled
  #when: v_rsrc_swap_check | default(false)
  when: v_run_task == "v_rsrc_swap_check"

- name: Debug swap check output
  debug:
    #var: reg_fstab_swap_count     # print out the entire result structure 
    msg: "Swap check output: '{{ reg_fstab_swap_count.stdout }}'"
  #when: v_rsrc_swap_check | default(false)
  when: v_run_task == "v_rsrc_swap_check" 

- name: "{{ f_this_file_name }} | RSC-4-02 - Disable swap"
  become: true
  command: /sbin/swapoff -a
  when: v_run_task == "v_rsc_set_swap_off"

#  
#  - name: "{{ f_this_file_name }} | RSC-1-01 - Ensure swap file doesn't exist (if configured)
#    file:
#      path: "{{ swap_file_path }}"
#
#  - name: "{{ f_this_file_name }} | RSC-1-01 - Disable SWAP in fstab since kubernetes can't work with swap enabled
#    replace:
#      path: /etc/fstab
#      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
#      replace: '# \1'
#
## if swap on, will look something like this - 
## $ free -h
##              total       used       free     shared    buffers     cached
## Mem:           14G        12G       2.7G       232K       512M       2.8G
## -/+ buffers/cache:       8.9G       6.0G
## Swap:         8.0G       289M       7.7G
## 
## $ grep swap /etc/fstab
## /dev/mapper/rootvg-swapvol swap                    swap    defaults        0 0
##
## $ /sbin/swapon -s
## Filename                                Type            Size    Used    Priority
##/dev/dm-1                               partition       8388604 296036  -1
#
#
##turn off swap and comment out /etc/fstab if there is any swap
##e.g. - /dev/hda6   swap     swap   defaults        0    0
##    or  free command shows ->
##Swap:          2047           5        2042
##$ grep -i --color swap /proc/meminfo
##SwapCached:        39196 kB
##SwapTotal:       8388604 kB
##SwapFree:        7995420 kB
##https://www.cyberciti.biz/faq/linux-add-a-swap-file-howto/
#
# https://codeberg.org/ansible/swap/src/branch/main/tasks/swap.yml
# https://supportex.net/blog/2014/10/ansible-add-swap-linux-box/
# https://github.com/geerlingguy/ansible-role-swap
# https://germaniumhq.com/2019/02/14/2019-02-14-Disabling-Swap-for-Kubernetes-in-an-Ansible-Playbook/



# -----------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------




- name: "{{ f_this_file_name }} | RSC-1-01 - Check /tmp freespace"
  shell: /usr/bin/df /tmp | awk '{print $4}' | tail -1
  register: reg_tmp_space_free
  tags:
    - just-this-task  
  when: v_todo | default(false)  

- name: "{{ f_this_file_name }} | RSC-1-01 - Print the register value of variable gathered from previous command"
  debug:
#    var: reg_tmp_space_free          # this will print the whole object 
    msg: "free space = {{ reg_tmp_space_free.stdout }}"
  tags:
    - just-this-task  
  when: v_todo | default(false)  

- name: "{{ f_this_file_name }} | RSC-1-01 - Compare the freespace against our requirements"
  # checks if the free space in /tmp is less than 3GB. If it is, the task fails and displays error message.
  fail:
    msg: /tmp does not have the minimum space required to continue (3Gb requested). 
  #when: reg_tmp_space_free.stdout|float is lt 3000000  # in Kb
  #when: reg_tmp_space_free.stdout|float is lt 30000000   # 30GB, just to test failure
  changed_when: false
  register: tmp_space_check
  tags:
    - just-this-task  
  when: v_todo | default(false)  


- name: "{{ f_this_file_name }} | RSC-1-01 - Print a custom message if there's enough space"
  # when the previous task did not fail (
  debug:
    msg: "There's sufficient space in /tmp."
#  when: tmp_space_check.failed
  tags:
    - just-this-task
  when: v_todo | default(false)  


#++++++++++++++++++++++++++++++++++++++++  this code got from check_disk_space.yml and deleted that file +++++++++++++++++++++++++++++ end +++++++++++


#++++++++++++++++++++++++++++++++++++++++  this code got from change_hostname.yml and deleted that file +++++++++++++++++++++++++++++ start +++++++++++

# works
# referred https://github.com/codylane/ansible-playbook-change-hostname
# https://www.middlewareinventory.com/blog/ansible-inventory_hostname-ansible_hostname-variables/


- name: "{{ f_this_file_name }} | RSC-1-01 - Print the hostnames in inventory"
  debug:
    msg: "{{ inventory_hostname }}"
  tags:
    - just-this-task  
  when: v_todo | default(false)  

- name: "{{ f_this_file_name }} | RSC-1-01 - Change the remote hostname using inventory name"
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - k8_install_phase_2A-change_hostname
  when: v_todo | default(false)  

- name: "{{ f_this_file_name }} | RSC-1-01 - Here we are checking ansible_hostname (actual REMOTE host name from returned values)"
  debug:
    msg: "a-hostname={{ ansible_hostname }}  a-fqdn={{ ansible_fqdn }}  a-nodename={{ ansible_nodename }}"
  tags:
    - just-this-task  
  when: v_todo | default(false)  


#++++++++++++++++++++++++++++++++++++++++  this code got from change_hostname.yml and deleted that file +++++++++++++++++++++++++++++ end +++++++++++


#tags:
#  - print_action                          # Applies to all tasks within the block

- name: "{{ f_this_file_name }} | RSC-1-01 - Print some remote host name information"
  debug:
    msg: "a-hostname={{ ansible_hostname }}  a-fqdn={{ ansible_fqdn }}  a-nodename={{ ansible_nodename }}"
  when: v_is1_hostinfo is defined and v_is1_hostinfo
  # tags:
  #   - t_is1_show_hostinfo

- name: "{{ f_this_file_name }} | RSC-1-01 -  Display total RAM"
  debug:
    msg: "Total RAM is {{ ansible_memory_mb.real.total }} MB"
  when: v_is1_ram is defined and v_is1_ram
  # tags:
  #   - t_is1_show_ram

- name: "{{ f_this_file_name }} | RSC-1-01 - Display IPv4 addresses"
  debug:
    msg: "IPv4 Addresses: {{ ansible_all_ipv4_addresses | default([]) }}"
  when: v_is1_ip4info is defined and v_is1_ip4info
  # tags:
  #   - t_is1_show_ip4



- name: "{{ f_this_file_name }} | RSC-1-01 - Get disk utilization information for /home"
  command: df -PTh /home
  register: filesystem_info
  when: v_is2_diskinfo is defined and v_is2_diskinfo


- name: "{{ f_this_file_name }} | RSC-1-01 - Display disk utilization information"
  debug:
    var: filesystem_info.stdout_lines
  when: v_is2_diskinfo is defined and v_is2_diskinfo


- name: "{{ f_this_file_name }} | RSC-1-01 -  Display IPv6 addresses"
  debug:
    msg: "IPv6 Addresses: {{ ansible_all_ipv6_addresses | default([]) }}"
  when: v_is2_ip6info is defined and v_is2_ip6info  



