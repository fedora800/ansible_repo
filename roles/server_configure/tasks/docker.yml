---

# https://docs.docker.com/engine/install/ubuntu/

- hosts: all
  become: true

  tasks:
  
    # they were called diff names, so docker website says make sure to uninstall them all
    - name: Un-install old docker package versions, if any
      apt:
        name: "{{ item }}"
        state: absent
        update_cache: yes
      loop:
        - docker 
        - docker-engine 
        - docker.io 
        - containerd 
        - runc
      tags:
        - just-this-task
  
    - name: Update the apt package index and install packages to allow apt to use a repository over HTTPS
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
         - ca-certificates
         - curl

    # i have just split the gnupg from above into a new task to just try out the when clause
    - name: Ensure additional dependencies (gnupg) are installed 
      apt:
        name: gnupg
        state: present
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('20.04', '>=')


    # Add Dockerâ€™s official GPG key:
    # sudo install -m 0755 -d /etc/apt/keyrings
    - name: Create the directory (if not there) to store the keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        owner: root
        group: root
        mode: "u+rwx,g+rx,o=rx"
        #mode: ugo+rw
        recurse: yes

    # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    # sudo chmod a+r /etc/apt/keyrings/docker.gpg
    # apt-key is deprecated, so need to do using other means
    # need to know if the key we are downloading is of type ASCII-armored or a binary gpg key
    # https://www.jeffgeerling.com/blog/2022/aptkey-deprecated-debianubuntu-how-fix-ansible
    # https://stackoverflow.com/questions/71585303/how-can-i-manage-keyring-files-in-trusted-gpg-d-with-ansible-playbook-since-apt
    # https://fabianlee.org/2023/04/17/ansible-adding-custom-apt-repository-with-signed-by-gpg-key/
    # using a .asc file will avoid the need to do the extra gpg --dearmor step entirely
    - name: Download docker gpg key file using get_url module into apt keyrings directory without using gpg armor 
      become: true
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0755

    # echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    #          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    # first part evaluates to - deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable
    - name: Set up the requisite docker repository in apt
      become: true
      apt_repository:
        # this will change depending on architecture and versions etc
        # ** i was not able to make the docker.asc work, i had to run the curl and armor to create the docker.gpg in proper binary gpg format, then this task worked **
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable
        state: present
        filename: docker        # looks like the .list extension gets appended
        update_cache: yes
        mode: 0755

    # now install docker engine
    # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    - name: Update the apt package index and install docker packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin



# --------------------------------------------------------------------------------

  #       - apt-transport-https
  #       - software-properties-common

# https://github.com/geerlingguy/ansible-role-docker/blob/master/tasks/setup-Debian.yml

#     - name: Add signing key
#       ansible.builtin.apt_key:
#         url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
#         state: present
# 
#     - name: Add repository into sources list
#       ansible.builtin.apt_repository:
#         repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#         state: present
#         filename: docker







