---
# file_management.yml

- name: Setting fact for file_management.yml
  ansible.builtin.set_fact:
    f_this_file_name: "file_management.yml"
#  no_log: true


# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html
# https://www.howtoforge.com/ansible-guide-manage-files-using-ansible/


- name: "{{ f_this_file_name }} | Debug - Enter file_management.yml"
  debug:
    msg: "Entered file_management.yml"
  when: v_debug is true


- name: "{{ f_this_file_name }} | Debug v_run_task variable"
  debug:
    msg: "v_run_task is set to: {{ v_run_task | default('NOT SET') }}"
  when: v_debug is true

- name: "{{ f_this_file_name }} | conditional task"
  debug:
    msg: "This task should execute when v_run_task is 'v_fm_append_to_hosts_file'"
  when: 
    - v_run_task == "v_fm_append_to_hosts_file"
    - v_debug is true

  
- name: "{{ f_this_file_name }} | Debug task inside block"
  debug:
    msg: "Inside the block in file_management.yml"
  tags:
    - k8_install_phase_2A-append_to_hosts_file

- name: "{{ f_this_file_name }} | FM-01 - copy from local host to remote hosts (here example tomcat service file)"
  copy:
    src: ../files/tomcat.service
    dest: /etc/systemd/system/
    mode: 0755
    backup: yes
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-02 - Copy tomcat service file from LOCAL host to the REMOTE node"
  template:
    src: templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_service_mgr == "systems"


- name: "{{ f_this_file_name }} | FM-03 - Backup/Make a copy of a file on the remote server"
  ansible.builtin.copy:
    src: /etc/hosts
    dest: /etc/hosts.{{ ansible_date_time.iso8601 }}
    remote_src: yes
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-04 - Move a file into a different directory on the remote server"
  ansible.builtin.command:
    src: /etc/hosts
    dest: /etc/hosts.{{ ansible_date_time.iso8601 }}
    remote_src: yes
    cmd: mv /etc/containerd/config.toml /tmp/config.toml
  become: true
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-05 - Copy file on REMOTE host into another directory"
  ansible.builtin.copy:
    src: /etc/hosts
    dest: /tmp/hosts.copy
    remote_src: yes
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-06 - create .kube directory"
  become: yes
  become_user: ubuntu
  file:
    path: $HOME/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0755
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-07 - Change ownership of tomcat directory"
  file:
    path: /opt/tomcat10
    owner: tomcat
    group: tomcat
    mode: "u+rwx,g+rx,o=rx"
    recurse: yes
    state: directory
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-08 - Change file ownership, group and permissions"
  when: v_fm_copy_1 | default(false)   
  ansible.builtin.file:
    path: /etc/foo.conf
    owner: foo
    group: foo
    mode: '0644'

- name: "{{ f_this_file_name }} | FM-09 - Create Symlink of file"
  file:
    src: /etc/nginx/sites-available/vhost
    dest: /etc/nginx/sites-enabled/vhost
    owner: root
    group: root
    state: link
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-10 - Download file from REMOTE node to LOCAL host (ansible node) directory"
  become: yes
  fetch:
    src: /etc/nginx/nginx.conf
    dest: /home/cloud_user/backup/
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-11 - Pattern match and replace - this example is a simple one without any regex"
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'
  become: true
  when: v_fm_copy_1 | default(false)   


# some other untested article for ref - https://www.middlewareinventory.com/blog/ansible-update-etc-hosts-file-across-all-hosts/
# i had to make it an independant playbook for now by add hosts, become, tasks etc so that i am able to run this independantly first thing when configuring the hosts
# $ ansible-playbook -i ~/git-projects/ansible_repo/inventories/staging --ask-become-pass append_records_to_etc_hosts_file.yml 
# appends a block of hostname and ip records to bottom of /etc/hosts file
- name: "{{ f_this_file_name }} | FM-12 - Append Hostname and IP records block to /etc/hosts file"
  become: true                                                          # as a non-root user, we want to become root and create this root owned file
  blockinfile:
    path: /etc/hosts                                                    # the full path and name of the file to be modified
    create: true                                                        # will create this file if does not exist
    state: present                                                      # should the block be present or not, here its set to be present
    #insertbefore: host1.example.com                                    # will insert before 1st occurrence of this line
    insertafter: EOF                                                    # if EOF, insert at EOF
    backup: yes                                                         # will backup old one if any changes and add datetimestamp suffix to filename
    marker: "# {mark} ANSIBLE MANAGED BLOCK"                            # BEGIN and END will be put in place of mark by default and the block will be enclosed in these 2 marker lines
    block: |                                                            # text to insert between the marker lines. note there will be no leading spaces. 
      172.31.127.36    acg-cpane1
      172.31.126.141   acg-worker1
#  when: k8_install_phase_2A | default(false) | bool
  # tags:
  #   - k8_install_phase_2A-append_to_hosts_file
  when: v_run_task == "v_fm_append_to_hosts_file"



- name: "{{ f_this_file_name }} | FM-13 - Print some remote host name information"
  debug:
    msg: "a-hostname={{ ansible_hostname }}  a-fqdn={{ ansible_fqdn }}  a-nodename={{ ansible_nodename }}"
  #when: v_is1_01_hostinfo is defined and v_is1_01_hostinfo
  when: v_run_task == "IS1-01"


# Append line to a file - line by line but a group of them- but have not tested yet
- name: "{{ f_this_file_name }} | FM-14 - configure sysctl params for Kubernetes"
  lineinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    line: "{{ item }}"
  with_items:
    - 'net.bridge.bridge-nf-call-iptables  = 1'
    - 'net.ipv4.ip_forward                 = 1'
    - 'net.bridge.bridge-nf-call-ip6tables = 1'
  when: v_fm_copy_1 | default(false)   


- name: "{{ f_this_file_name }} | FM-15 - Delete text block surrounded by markers on REMOTE node"
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    content: ""
    backup: yes
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-16 - Replace Pattern in a file with string and also using placeholders"
  replace:
    path: /etc/hosts
    regexp: '(\s+)node\.example\.com(\s+.*)?$'
    replace: '\1box.testnet.org\2'
    backup: yes
  when: v_fm_copy_1 | default(false)   

- name: "{{ f_this_file_name }} | FM-17 - Remove a line (that matches our regexp) from the file on REMOTE node"
  lineinfile:
    path: /etc/ssh/sshd_config
    state: absent
    regexp: '^PasswordAuthentication'
  when: v_fm_copy_1 | default(false)   


- name: "{{ f_this_file_name }} | FM-18 - Uncomment configuration"
  replace:
    path: /etc/nginx/nginx.conf
    regexp: '#(\s+)server_tokens'
    replace: 'server_tokens'
    backup: yes
  when: v_fm_copy_1 | default(false)   

# - name: "{{ f_this_file_name }} | FM-0 Comment Line configuration
#   replace:
#     path: /etc/nginx/nginx.conf
#     regexp: '(\s+)gzip on'
#     replace: '\n\t#gzip on'
#     backup: yes
#   when: v_fm_copy_1 | default(false)   
#   tags:
#     - "{{ 't_fm_dummy' if v_fm_copy_1 else '' }}"

- name: "{{ f_this_file_name }} | FM-19 - Check if file exists and get its file permissions"
  ansible.builtin.stat:
    path: /etc/apt/keyrings
  register: keyring_dir_stat

- name: Print directory status and permissions of /etc/apt/keyrings
  debug:
    msg: "Directory exists: {{ keyring_dir_stat.stat.exists }}, Permissions: {{ keyring_dir_stat.stat.mode }}"


- name: "{{ f_this_file_name }} | Debug - Exit file_management.yml"
  debug:
    msg: "Exiting file_management.yml"
  when: v_debug is true

