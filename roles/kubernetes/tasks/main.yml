---
# tasks file for kubernetes

- hosts: k8_nodes_private_ips
#- hosts: all
  become: true

  tasks:
#    - import_tasks: check_prerequisites.yml
    when: "'k8_nodes_private_ips' in group_names"
  - import_tasks: phase_1_steps_on_all_k8_nodes.yml
    when: "'k8_nodes_private_ips' in group_names"
#  - import_tasks: phase_2_steps_on_k8_control_pane_nodes.yml
    when: "'k8_nodes_control' in group_names"
#  - import_tasks: generate_password.yml
#  - import_tasks: add_user.yml
#  - import_tasks: install_with_apt.yml
#
### none of above are working. just place holders for now
#
#
#phase 3 -  steps to do on *ONLY* on worker
#
#kubeadm join            ( make sure to run with --v=5)
#    i think i need to run as sudo
#    it threws errors and took around 6 mins to complete
#
#verify by looking into output and it will say node has joined the cluster
#--------------------------------------------------------------------------------
#phase 4 -  verify cluster on *ONLY* on master
#
#run some commands like
#kubectl get nodes  (should show NotReady for now, as CNI not yet setup)
#
#--------------------------------------------------------------------------------
#phase 5 - install calico networking compoment (CNI) on *ONLY* on master
#
#lets use calico and do the kubectl apply of calico file
# https://docs.tigera.io/calico/latest/getting-started/kubernetes/self-managed-onprem/onpremises
#
#then check by doing kubectl get pods -o wide
#
#now all the nodes should show ready
#
#we will see a new network interface (maybe called tun10@NONE) which will be on the 192.168.X.X subnet if we had configured our kubadm init with that network
#
#--------------------------------------------------------------------------------
## https://www.digitalocean.com/community/tutorials/how-to-create-a-kubernetes-cluster-using-kubeadm-on-ubuntu-20-04
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------
#--------------------------------------------------------------------------------




