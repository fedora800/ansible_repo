---

Method chosen is "Installing Kubeadm" - https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

For above, we first need to install the container runtime on each node so we can run the pods - https://kubernetes.io/docs/setup/production-environment/container-runtimes/
So, do the steps below

### Forwarding IPv4 and letting iptables see bridged traffic ###

Execute the below mentioned instructions:

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sudo sysctl --system

#Verify that the br_netfilter, overlay modules are loaded by running below instructions:
lsmod | grep br_netfilter
lsmod | grep overlay

Verify that the net.bridge.bridge-nf-call-iptables, net.bridge.bridge-nf-call-ip6tables, net.ipv4.ip_forward system variables are set to 1 in your sysctl config by running below instruction:

sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward

--------------------------------------------------------------------------------

# now install containerd
# i think i will have to follow docker documentation but not install docker but only containerd
https://docs.docker.com/engine/install/ubuntu/

# Update the apt package index and install packages to allow apt to use a repository over HTTPS:
sudo apt update
sudo apt install ca-certificates curl gnupg

#Add Dockerâ€™s official GPG key
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Use the following command to set up the repository
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#Update the apt package index
sudo apt update

#now do not install anything else from docker but only containerd
sudo apt install -y containerd.io
(apt show containerd | grep -i version   ---> Version: 1.7.2-0ubuntu1~22.04.1)

# now back to kubernetes doc, section "Configuring the systemd cgroup driver" and refer to the "Note"
#throw away the install created config file /etc/containerd/config.toml and create one from default and restart the daemon
#sudo rm -f /etc/containerd/config.toml
sudo mv /etc/containerd/config.toml /etc/containerd/config.toml.orig
#sudo containerd config default > /etc/containerd/config.toml
# instead of above, use below (due to not fully sudo) - 
sudo containerd config default | sudo tee /etc/containerd/config.toml
# Configuring the systemd cgroup driver 
sudo vim /etc/containerd/config.toml
#and search for pattern -> plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options
and change the value of this to this -> SystemdCgroup = true
sudo systemctl restart containerd

--------------------------------------------------------------------------------

-name  add config to k8.conf
-name  do the sudo modprob
-name  persist sysctl params across reboots
-name Apply sysctl params without reboot




