---

# all of these tasks worked for me, but i ran them piecemeal buy taking one at a time in a different file and running them

- hosts: all
  become: true

  tasks:

#--------------------------------------------------------------------------------
# Section 3 - Installing kubeadm, kubelet and kubectl 
# https://v1-28.docs.kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl


# 1. Update the apt package index and install packages to allow apt to use a repository over HTTPS:
#  sudo apt-get update
# apt-transport-https may be a dummy package; if so, you can skip that package
#  sudo apt-get install -y apt-transport-https ca-certificates curl gpg

- name: Section 3 - Update apt and install required packages to allow apt to get repos over https
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present
    update_cache: true


# 2. Download the public signing key for the Kubernetes package repositories
#  curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

  - name: Section 3 - Download Kubernetes official pgp (old format) file
    become: true
    get_url:
      url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key 
      dest: /tmp/k8s.pgpkey
      mode: 0755

  - name: Section 3 - Convert the downloaded PGP key using gpg dearmor and save file in OpenPGP Public Key Version 4 format in keyrings dir
    become: true
    ansible.builtin.shell: "gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg < /tmp/k8s.pgpkey; file /tmp/k8s.pgpkey /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
    register: reg_file_cmd_output

  - name: Print output of above file cmd output on the key files
    debug:
      msg: "{{ reg_file_cmd_output.stdout }}"       # only the stdout


# 3. Add the appropriate Kubernetes *apt* repository
# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
#  echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

  - name: Section 3 - Add the requisite Kubernetes repository in apt sources directory
    become: true
    apt_repository:
      # *** i am HARD CODING for now ***
      # this will change depending on architecture and versions etc
      repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
      state: present
      filename: kubernetes        # the .list extension gets appended, so /etc/apt/sources.list.d/kubernetes.list file gets created with the above line as content
      update_cache: yes
      mode: 0644


# 4. Update the apt package index, install kubelet, kubeadm and kubectl, and pin their version
#  sudo apt-get update
#  sudo apt-get install -y kubelet kubeadm kubectl
#  sudo apt-mark hold kubelet kubeadm kubectl
# The kubelet is now restarting every few seconds, as it waits in a crashloop and will log continuously in /var/log/syslog until we finish creating the cluster, ie after kubeadm init on control plane and kubeadm join on the worker nodes

  - name: Section 3 - Install kubelet
    apt:
      name: kubelet=1.28.*
      state: present
      update_cache: true
    become: true

  - name: Section 3 - Install kubeadm
    apt:
      name: kubeadm=1.28.*
      state: present
    become: true

  - name: Section 3 - Install kubectl
    apt:
      name: kubectl=1.28.*
      state: present
    become: true

  - name: Section 3 - Set apt to pin/disallow any version upgrades on kubelet, kubeadm, kubectl
# could not find any apt option to hold yet so using the shell cmd
    ansible.builtin.shell: 
      cmd: "sudo apt-mark hold kubelet kubeadm kubectl"
    become: true

#May 19 09:51:17 acg-worker2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 1016.
#May 19 09:51:17 acg-worker2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
#May 19 09:51:17 acg-worker2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
#May 19 09:51:17 acg-worker2 kubelet[8506]: E0519 09:51:17.390243    8506 run.go:74] "command failed" err="failed to load kubelet config file, path: /var/lib/kubelet/config.yaml, error: faile
#d to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \"/var/lib/kubelet/config.yaml\", error: open /var/lib/kubelet/config.yaml: no such file
#or directory"
#May 19 09:51:17 acg-worker2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
#May 19 09:51:17 acg-worker2 systemd[1]: kubelet.service: Failed with result 'exit-code'.



