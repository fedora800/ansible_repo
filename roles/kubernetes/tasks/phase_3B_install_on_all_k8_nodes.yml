---
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl
# this one is only for the above sub-section, ie installing of the k8 packages

# run apt update and upgrade, it's there in another role
# - name: append host and ip records to /etc/hosts file (CALLS from another ROLE)
- ansible.builtin.include_role:
    name: server_configure
    # use only this task, name should match the yml file
    tasks_from: apt_update_and_upgrade

# install packages needed to use the Kubernetes apt repository
# sudo apt-get install -y apt-transport-https ca-certificates curl
- name: apt install https, certificate and curl packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
    state: present
  become: true

- name: Download the Google Cloud public signing key
# sudo curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
# above command will download the remote gpg file into the file and path we gave and create with root:root and 644 perms.
  shell: curl -fsSLo /etc/apt/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg


## NOTE - for ubuntu 22.04, it did not work for me and we see online not on k8 site but other searches
# when we ran sudo apt update
#    Err:6 https://packages.cloud.google.com/apt kubernetes-xenial InRelease
#     The following signatures couldn't be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05
#     Reading package lists... Done
#     W: GPG error: https://packages.cloud.google.com/apt kubernetes-xenial InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY B53DC80D13EDEF05
#     E: The repository 'https://apt.kubernetes.io kubernetes-xenial InRelease' is not signed.
#     N: Updating from such a repository can't be done securely, and is therefore disabled by default.
#    the we need to use different command here  - 
#    curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

# -- now for v1.28 , to do below ---
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
#ubuntu@oci-k8-control1:/etc/apt/sources.list.d$ apt list kubelet
#Listing... Done
#kubelet/unknown 1.28.0-1.1 amd64
#kubelet/unknown 1.28.0-1.1 arm64
#kubelet/unknown 1.28.0-1.1 ppc64el
#kubelet/unknown 1.28.0-1.1 s390x
#ubuntu@oci-k8-control1:/etc/apt/sources.list.d$ apt list kubectl
#Listing... Done
#kubectl/unknown 1.28.0-1.1 amd64
#kubectl/unknown 1.28.0-1.1 arm64
#kubectl/unknown 1.28.0-1.1 ppc64el
#kubectl/unknown 1.28.0-1.1 s390x
#ubuntu@oci-k8-control1:/etc/apt/sources.list.d$ apt list kubeadm
#Listing... Done
#kubeadm/unknown 1.28.0-1.1 amd64
#kubeadm/unknown 1.28.0-1.1 arm64
#kubeadm/unknown 1.28.0-1.1 ppc64el
#kubeadm/unknown 1.28.0-1.1 s390x
# --

- name: Add the Kubernetes apt repository
#echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update apt package index, install kubelet, kubeadm and kubectl, and pin their version:

- ansible.builtin.include_role:
    name: server_configure
    # use only this task, name should match the yml file
    tasks_from: apt_update_and_upgrade

# if i want to install specific version just in case, sudo apt-get install -y kubelet=1.26.0-00 kubeadm=1.26.0-00 kubectl=1.26.0-00
# sudo apt install -y kubelet kubeadm kubectl
# i dont want to install in loop, prefer to be logged as seperate tasks
# NOTE - all 3 will throw errors continuously in /var/log/syslog until we finish creating the cluster, ie after kubeadm init on control plane and kubeadm join on the worker nodes
# The kubelet is now restarting every few seconds, as it waits in a crashloop for kubeadm to tell it what to do.

- name: install kubelet
  apt:
    name: kubelet
    state: present
    update_cache: yes
  become: true

- name: install kubeadm
  apt:
    name: kubeadm
    state: present
    update_cache: yes
  become: true

- name: install kubectl
  apt:
    name: kubectl
    state: present
    update_cache: yes
  become: true

# May 24 13:56:22 acg-k8-controlp2 systemd[1]: kubelet.service: Scheduled restart job, restart counter is at 5.
# May 24 13:56:22 acg-k8-controlp2 systemd[1]: Stopped kubelet: The Kubernetes Node Agent.
# May 24 13:56:22 acg-k8-controlp2 systemd[1]: Started kubelet: The Kubernetes Node Agent.
# May 24 13:56:22 acg-k8-controlp2 kubelet[3695]: E0524 13:56:22.533746    3695 run.go:74] "command failed" err="failed to load kubelet config file, error: failed to load Kubelet config file /var/lib/kubelet/config.yaml, error failed to read kubelet config file \"/var/lib/kubelet/config.yaml\", error: open /var/lib/kubelet/config.yaml: no such file or directory, path: /var/lib/kubelet/config.yaml"
# May 24 13:56:22 acg-k8-controlp2 systemd[1]: kubelet.service: Main process exited, code=exited, status=1/FAILURE
# May 24 13:56:22 acg-k8-controlp2 systemd[1]: kubelet.service: Failed with result 'exit-code'.


- name: pin the versions used
  shell: sudo apt-mark hold kubelet kubeadm kubectl

# to install docker, i have a completely different role
# and i prefer to install docker first before kubernetes install


